
;; Determine if the compiler supports the --experimental_allow_proto3_optional flag.
;; The output file will be non-empty if the flag is supported
(subdir config
 (rule
 (target support_proto3_optional.conf)
 (action (with-accepted-exit-codes (or 0 1) (ignore-stderr (with-stdout-to %{target} (run protoc --experimental_allow_proto3_optional --version)))))))

;; TODO. The name included3-dash.proto does not work

(library
 (name singleton_record)
 (inline_tests)
 (libraries ocaml_protoc_plugin google_types)
 (preprocess (pps ppx_expect))
)

(rule
 (targets
    basic.ml
    deprecated.ml
    empty_message.ml
    empty.ml
    enum.ml
    extensions.ml
    included2.ml
    included.ml
    included3_dash.ml
    include.ml
    int_types_native.ml
    int_types_native_proto2.ml
    int_types.ml
    json_encoding.ml
    large.ml
    mangle_names.ml
    map.ml
    merge.ml
    message.ml
    name_clash2.ml
    name_clash_mangle.ml
    name_clash.ml
    oneof.ml
    options.ml
    package.ml
    packed.ml
    primitive_types.ml
    proto2.ml
    protocol.ml
    recursive.ml
    repeated.ml
    service_empty_package.ml
    service.ml
    service_rpc_clash.ml
    singleton_record.ml)
 (deps
  (:plugin ../../src/plugin/protoc_gen_ocaml.exe)
  (:proto
    ../basic.proto
    ../deprecated.proto
    ../empty_message.proto
    ../empty.proto
    ../enum.proto
    ../extensions.proto
    ../included2.proto
    ../included.proto
    ../included3-dash.proto
    ../include.proto
    ../int_types_native.proto
    ../int_types_native_proto2.proto
    ../int_types.proto
    ../json_encoding.proto
    ../large.proto
    ../mangle_names.proto
    ../map.proto
    ../merge.proto
    ../message.proto
    ../name_clash2.proto
    ../name_clash_mangle.proto
    ../name_clash.proto
    ../oneof.proto
    ../options.proto
    ../package.proto
    ../packed.proto
    ../primitive_types.proto
    ../proto2.proto
    ../protocol.proto
    ../recursive.proto
    ../repeated.proto
    ../service_empty_package.proto
    ../service.proto
    ../service_rpc_clash.proto
    ../singleton_record.proto)
 )
 (action
  (run protoc -I %{read-lines:../google_include} -I ..
       "--plugin=protoc-gen-ocaml=%{plugin}"
       "--ocaml_out=open=Google_types;singleton_record=true;:." %{proto})))
