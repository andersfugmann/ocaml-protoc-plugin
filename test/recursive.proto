syntax = "proto3";

package recursive;

message Tree {
  message Node {
    Tree left = 1;
    Tree right = 2;
  }
  message Leaf {
    uint64 i = 1;
  }
  oneof X {
    Node node = 1;
    Leaf leaf = 2;
  }
}

message Message {
  message Message1 {
    Message m1 = 10;
  }
  Message1 m = 1;
}

message Mutual1 {
  Mutual2 m2 = 7;
}

message Mutual2 {
  Mutual1 m1 = 17;
}

message StdTree {
  StdTree left = 1;
  int64 value = 2;
  StdTree right = 3;
}


message Recursive1 {
  message Recursive {
    message A { }
    message B { }

    message Recursive {
      message B { }
      message A { }
      .recursive.Recursive1.Recursive.Recursive.A r1 = 1;
      .recursive.Recursive1.Recursive.Recursive.B r2 = 2;
      .recursive.Recursive1.Recursive.A r3 = 3;
      .recursive.Recursive1.Recursive.B r4 = 4;
    }
    .recursive.Recursive1.Recursive.Recursive.A r1 = 1;
    .recursive.Recursive1.Recursive.Recursive.B r2 = 2;
    .recursive.Recursive1.Recursive.A r3 = 3;
    .recursive.Recursive1.Recursive.B r4 = 4;
  }
  .recursive.Recursive1.Recursive.Recursive.A r1 = 1;
  .recursive.Recursive1.Recursive.Recursive.B r2 = 2;
  .recursive.Recursive1.Recursive.A r3 = 3;
  .recursive.Recursive1.Recursive.B r4 = 4;
}

message Recursive_map {
  map<uint64, Recursive_map> m = 1;
}

message Recursive2 {
  message X {
    Recursive2 x = 1;
  }
  X x = 1;
}
